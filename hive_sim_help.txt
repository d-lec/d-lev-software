- HIVE SIMULATOR HELP FILE -

COMMANDS:
- The general format is variables (if any) first, terminated by the command, followed by a white space (space, return, etc.)
- <thd> "isr" without quotes issues an interrupt to thread (if no thd then current).
- <thd> "xsr" same as "isr" but maskable (if no thd then current).
- "cla" clears all threads (issues a soft reset).
- <addr> <data> "wb" "wh" "wm" write byte, half word, and word to memory.
- <addr> "rb" "rh" "rm" read byte, half word, and word from memory.
- <stk> "pop" pop stack.
- <stk> <data> "psh" push data to stack.
- <stk> "rs" read stack.
- <stk> <data> "ws" write stack (pop & push).
- <data> "wio" write to general purpose I/O.
- <data> "wu" push to RX UART FIFO.
- "ru" pop from TX UART FIFO.
- "rl" pop from LCD FIFO.
- "cy" is the same as F7.
- "bp" is the same as F8.
- 'h', 'u', 'i' change the number display format to HEX, UINT, and INT, respectively.
- 'g' with an address before it will set the display there.
- "help" to see this file.
- Command line return status: <OK> = successful; <?> unsuccessful; followed by possible read value.
 
KEYS:
- L & R arrows, CTRL L & R arrows, BKSP, DEL, HOME, END act as usual.
- UP & DN arrows recall cmd history (history depth = 31).
- ALT UP / DN arrows move listing one line (& unmoor hilight).
- ALT PGUP / PGDN move listing one page (& unmoor hilight).
- ALT HOME returns listing hilight to execution point & moors it there.
- F1-F4 select threads 1-4, SHFT F1-F4 select threads 5-7,0.
- F5 single clock step (there are 8 clocks per cycle, rarely used).
- F6 single cycle step (do 8 clocks).
- F7 is multi-cycle.  Input a number, say 100, and press F7 to do 100 cycles every time you press F7.
- F8 is run to breakpoint.  Input an address and press F8, it should stop at the address immediately before that.

FILE I/O:
- "cfg" resets the sim, reloads and assembles the *.hal source file(s), and generates the output files.  
- You can specify a different source file before the command if you like, or on the command line when starting the program.  
- "theremin.hal" is the current hard coded default source, and it pulls in a bunch of others in that directory.  
- The FPGA blockram config files "hive_0.mif" thru "hive_3.mif" are generated, which can be copied to the FPGA directory. 
- Also generated is "<crc>.ttl" which is the Tera Term macro to pump the EEPROM.
- Also generated is "<crc>.spi" which is used by D-Lib to pump the EEPROM.

PROGRAM SETUP:
1. Unzip all files to a folder.
2. For POSIX target: comment out #define MSWIN at top of file.
3. To build: compile "hive_sim.cpp" with -std=gnu++11 option.
4. Set console font small enough to accomodate 128 x 52.
- For Linux, create desktop launcher & edit it manually (for example):

[Desktop Entry]
Name=term
Exec=gnome-terminal --title="HIVE_SIM" --geometry 128x52 -x  /home/demo/Documents/CPP/HIVE/HIVE_CPP/_SRC_/hive_sim
Comment=
Terminal=false
Icon=exec
Type=Application
Path=/home/demo/Documents/CPP/HIVE/HIVE_CPP/_SRC_/
Name[en_US]=HIVE_SIM
