////////////////////////////////////////////////
// THD 5 : Tone Controls, Formant Banks 0 & 1 //
////////////////////////////////////////////////
//////////
// INIT //
//////////
@xsr_5 {	s0 :hu= mem[@pre_init_ds]	// get pre_init  ** XSR 5 START **
	(P0 == 0) ? pc := @fz	// (init == 0) ?
	s4 := @eq_bass_ds	// start addr
	s5 := @lr_0_3_ds	// end addr
	s7 := pc := @init_mem	// <=> init_mem()
	pc :i= P7	// => IRETURN
@fz	s4 := 0	// init f_mix
	s0 := mem[@on_mix_ds]	// get on_mix
///////////////////
// BASS & TREBLE //
///////////////////
// EQ_P1 (treb)
	s2:= mem[@eq_p1_ds]	// get treb[-32:31](fs)
	s6 := @eq_treb_ds	// addr
	s7 := pc := @eq_treb	// <=> eq_treb()
// EQ_P0 (bass)
	s2:= mem[@eq_p0_ds]	// get bass[-32:31](fs)
	s6 := @eq_bass_ds	// addr
	s7 := pc := @eq_bass	// <=> eq_bass()
///////////
// FORM0 //
///////////
	s5 := mem[@v_damp_ds]	// get v_damp
// P1 (levl)
	s1 := mem[@f_p1_ds]	// get levl[-63:63](s48db_dn)
	s0 *xs= P1	// in * levl (cpy)
// P0 (freq), P6 (pmod), P7 (vmod)
	s1 := mem[@f_p0_ds]	// get freq
	s3 := mem[@f_p7_ds]	// get vmod[-63:63](fs)
	s3 := mem[@f_p6_ds]	// get pmod[-63:63](fs)
	s7 := pc := @svf_freq_mod	// => @svf_freq_mod()
// P12 (reso)
	s2 := mem[@f_p12_ds]	// get reso[0:63](84db_rev_n)
	P2 *xu= s5	// reso * v_damp
	P2 := ~s2	// ~(reso * v_damp)
	s2 := s2	// cpy
	s6 := @f_form0_ds	// form ds addr
	s7 := pc := @form	// <=> @form()
	P0 >>>= 3	// out/8
	P4 +s= P0	// f_mix + out/8
///////////
// FORM1 //
///////////
// P15 (levl)
	s1 := mem[@f_p15_ds]	// get levl[-63:63](s48db_dn)
	s0 *xs= P1	// in * levl (cpy)
// P14 (freq), P6 (pmod), P7 (vmod)
	s1 := mem[@f_p14_ds]	// get freq
	s3 := mem[@f_p7_ds]	// get vmod[-63:63](fs)
	s3 := mem[@f_p6_ds]	// get pmod[-63:63](fs)
	s7 := pc := @svf_freq_mod	// => @svf_freq_mod()
// P12 (reso)
	s6 := @f_form1_ds	// form ds addr
	s7 := pc := @form	// <=> @form()
	P0 >>>= 3	// out/8
	P4 +s= P0	// f_mix + out/8
///////////
// FORM2 //
///////////
// P3 (levl)
	s1 := mem[@f_p3_ds]	// get levl[-63:63](s48db_dn)
	s0 *xs= P1	// in * levl (cpy)
// P2 (freq), P8 (pmod), P9 (vmod)
	s1 := mem[@f_p2_ds]	// get freq
	s3 := mem[@f_p9_ds]	// get vmod[-63:63](fs)
	s3 := mem[@f_p8_ds]	// get pmod[-63:63](fs)
	s7 := pc := @svf_freq_mod	// => @svf_freq_mod()
// P13 (reso)
	s2 := mem[@f_p13_ds]	// get reso[0:63](84db_rev)
	P2 *xu= P5	// reso * v_damp
	P2 := ~s2	// ~(reso * v_damp)
	s2 := s2	// cpy
	s6 := @f_form2_ds	// form ds addr
	s7 := pc := @form	// <=> @form()
	P0 >>>= 3	// out/8
	P4 +s= P0	// f_mix + out/8
///////////
// FORM3 //
///////////
// P17 (levl)
	s1 := mem[@f_p17_ds]	// get levl[-63:63](s48db_dn)
	s0 *xs= P1	// in * levl (cpy)
// P16 (freq), P8 (pmod), P9 (vmod)
	s1 := mem[@f_p16_ds]	// get freq
	s3 := mem[@f_p9_ds]	// get vmod[-63:63](fs)
	s3 := mem[@f_p8_ds]	// get pmod[-63:63](fs)
	s7 := pc := @svf_freq_mod	// => @svf_freq_mod()
// P13 (reso)
	s6 := @f_form3_ds	// form ds addr
	s7 := pc := @form	// => @form()
	P0 >>>= 3	// out/8
	P4 +s= P0	// f_mix + out/8
/////////
// Mix //
/////////
	mem[@f_0_3_ds] := P4	// sto f_mix
	mem[@lr_0_3_ds] := P0	// sto lr_mix
	pc :i= P7 }	// => IRETURN  ** XSR END **
////////////////
// data store //
////////////////
// KEEP THESE SEQUENTIAL!
@eq_bass_ds {	mem[2] := ( 1 ) }	// ** EQ_BASS_DS **
@eq_treb_ds {	mem[2] := ( 1 ) }	// ** EQ_TREB_DS **
@f_form0_ds {	mem[2] := ( 0 ) }	// ** F_FORM0_DS **
@f_form1_ds {	mem[2] := ( 0 ) }	// ** F_FORM1_DS **
@f_form2_ds {	mem[2] := ( 0 ) }	// ** F_FORM2_DS **
@f_form3_ds {	mem[2] := ( 0 ) }	// ** F_FORM3_DS **
@f_0_3_ds {	mem[1] := ( 0 ) }	// ** F_0_3_DS **
@lr_0_3_ds {	mem[1] := ( 0 ) }	// ** LR_0_3_DS **
